// ---------------------------------------------------------------------
// 题目描述:
// 超大背包问题
// 有重量和价值分别为 wi, vi 的物品, 从这些物品中挑选总重量不超过 W 的物品,
// 求所有挑选方案中价值总和的最大值.
// 1 <= n <= 40
// 1 <= wi, vi <= 10^15
// 1 <= W <= 10^15
// ---------------------------------------------------------------------
// 思路:
// 通常的01背包模型时间复杂度是O(nW), 显然不能解决此题,
// 由于 n 较小, 可以从这里入手, 把 n 件物品拆分成两部分,
// 令前半部分的重量和价值为 w1, v1, 现要在第二部分中找到总重 w2 <= W - w1时
// 使得 v2 最大的选取方法.(max{v2 | w2 <= W - w1})
// 首先可以排除 w2[i] <= w2[j] 并且 v2[i] >= v2[j] 的 j.
// 剩余的元素都满足 w2[i] < w2[j] <=> v2[2] < v2[j], 这样只需要找到满足 w2[i] <= W - w1 的最大的 i 就可以了.
// 这一步可以用二分搜索, 时间复杂度为O(log(2^(n)))=O(n).
// 故总时间复杂度为O(2^(n/2)*n), 可以在时限内解决
// ---------------------------------------------------------------------